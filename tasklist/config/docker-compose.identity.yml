services:
  postgres:
    container_name: postgres
    image: postgres:16.4-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: identity
      POSTGRES_USER: identity
      POSTGRES_PASSWORD: "t2L@!AqSMg8%I%NmHM"
    networks:
      - identity-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - path.repo=/usr/local/els-snapshots
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
    networks:
      - identity-network
    volumes:
      - ./els-snapshots:/usr/local/els-snapshots

  opensearch:
    image: opensearchproject/opensearch:2.16.0
    container_name: opensearch
    environment:
      - cluster.name=opensearch-cluster
      - discovery.type=single-node
      - plugins.security.disabled=true
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=yourStrongPassword123!
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    ports:
      - 9205:9200
      - 9605:9605 # required for Performance Analyzer
    networks:
      - identity-network

  keycloak:
    depends_on:
      - postgres
    container_name: keycloak
    image: bitnami/keycloak:25.0.4
    ports:
      - "18080:8080"
    environment:
      KEYCLOAK_HTTP_RELATIVE_PATH: /auth
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_NAME: identity
      KEYCLOAK_DATABASE_USER: identity
      KEYCLOAK_DATABASE_PASSWORD: "t2L@!AqSMg8%I%NmHM"
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth"]
      interval: 30s
      timeout: 15s
      retries: 8
      start_period: 30s
    networks:
      - identity-network

  identity:
    depends_on:
      keycloak:
        condition: service_healthy
    restart: on-failure
    container_name: identity
    image: camunda/identity:SNAPSHOT
    ports:
      - "8084:8084"
    environment:
      SERVER_PORT: 8084
      IDENTITY_LOG_LEVEL: DEBUG
    env_file:
      - .env.test
      - envs/.env.identity
    networks:
      - identity-network

  zeebe:
    container_name: zeebe-${DATABASE}
    image: camunda/zeebe:SNAPSHOT
    environment:
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
      - ZEEBE_BROKER_CLUSTER_PARTITIONS_COUNT=4
      - SPRING_PROFILES_ACTIVE=identity-auth
      - CAMUNDA_IDENTITY_ISSUERBACKENDURL=http://keycloak:8080/auth/realms/camunda-platform
      - CAMUNDA_IDENTITY_BASEURL=http://identity:8084
      - CAMUNDA_IDENTITY_AUDIENCE=zeebe-api
    ports:
      - 26500:26500
      - 8000:8000
      - 8089:8080
    restart: always
    env_file:
      - envs/.env.database.${DATABASE}
      - envs/.env.identity
    networks:
      - identity-network
    depends_on:
      - ${DATABASE}

  operate:
    image: camunda/operate:SNAPSHOT
    container_name: operate-${DATABASE}
    environment:
      - SERVER_PORT=8081
      - SPRING_PROFILES_ACTIVE=dev-data,identity-auth
    ports:
      - 8081:8081
    env_file:
      - envs/.env.database.${DATABASE}
      - envs/.env.identity
    networks:
      - identity-network
    depends_on:
      - identity
      - zeebe
      - ${DATABASE}

  tasklist:
    restart: on-failure
    image: camunda/tasklist:SNAPSHOT
    container_name: tasklist-${DATABASE}
    environment:
      - SERVER_PORT=8082
      - SPRING_PROFILES_ACTIVE=identity-auth,dev,dev-data
    ports:
      - 8082:8082
    env_file:
      - envs/.env.database.${DATABASE}
      - envs/.env.identity
    networks:
      - identity-network
    depends_on:
      - identity
      - zeebe
      - ${DATABASE}

networks:
  identity-network: {}
